{"ast":null,"code":"var _jsxFileName = \"/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/collapsibles/Collapsible.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { MyContext } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nconst StyledCollapsible = styled.section`\n  padding: 20px;\n  position: relative;\n  background: white;\n  ${\"\"\n/* position: fixed; */\n}\n  position: absolute;\n  height: 100%;\n  top: 0;\n  right: 0;\n  width: 300px;\n  height: 100vh;\n  min-width: 400px;\n  bottom: 0;\n  box-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.2);\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  /* esto es la magia */\n  z-index: 200;\n  transform: translateX(100%);\n  transition: all 0.3s;\n  ${props => props.open && `transform: translateX(0);`};\n`;\nconst StyledItem = styled.div``;\n\nconst RenderItem = (item, route) => {\n  return React.createElement(StyleLink, {\n    to: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(StyledItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, item));\n};\n\nconst StyleLink = styled(Link)`\n  color: red;\n`; // const Item = item => {\n//   const arr = [];\n//   for (let key in item) {\n//     if (Object.keys(item[key]).length !== 0) {\n//       for (let key2 in item[key]) {\n//         arr.push(RenderItem(key2));\n//         console.log(item[key]);\n//       }\n//     }\n//   }\n//   return <StyledItem>{arr}</StyledItem>;\n// };\n\nexport default function Collapsible({\n  navbar,\n  open\n}) {\n  return React.createElement(MyContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, context => React.createElement(StyledCollapsible, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: context.toggleMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"X\"), navbar.user ? React.createElement(Link, {\n    to: \"/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }) : navbar.heart ? React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"WishList\"), React.createElement(\"div\", {\n    className: \"wishlist-elements-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, context.wishListProds.map(e => React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, e.name)))) : navbar.shoppingcart ? React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Your Cart\"), React.createElement(\"div\", {\n    className: \"cart-products\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, context.Cart.map(e => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, e.name, \" : \", e.price)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Total: \", state.Cart.map(e => ({})), \" \"))) : null));\n}\n{\n  /* {if {}}\n           {items.map((item, idx) => (\n             <Item key={idx} {...item} />\n           ))} */\n}\n{}\n/* {\n           (navbar.user) \n           ? (<Link to=\"/profile\"></Link>) \n           : (navbar.heart) \n           ? (\n             <>\n             <h2>WishList</h2>\n             <div className = \"wishlist-elements-container\">\n             {context.wishListProds.map(e=>(\n                <h2>{e.name}</h2>\n              ))}\n             </div> \n             </>\n             ) \n           : (navbar.shoppingcart)\n           ? (\n               <>\n               <h2>Your Cart</h2>\n             <div className = \"cart-products\">\n               {context.Cart.map(e=>(\n                 <p>{e.name} : {e.price}</p>\n               ))}\n               <p>Total: {state.Cart.map(e => ({}))} </p>\n               </div>\n               </>\n             )\n           : null\n         } */\n// export default Collapsible;\n// export default function NavBar() {\n//   return (\n//     <MyContext.Consumer>\n//       {context => (\n//         <NavMain>\n//           <Collapsible\n//             items={[\n//               {\n//                 title: \"a\",\n//                 body: \"asdf\"\n//               }\n//             ]}\n//             open={context.open}\n//           />\n//           <h1 className=\"logo\">MoMe</h1>\n//           <div className=\"main-nav-icons\">\n//             <Icon.Heart size=\"24\" color=\"white\" />\n//             <BtnTransparent onClick={context.switchOpen}>\n//               <Icon.User size=\"24\" color=\"white\" />\n//             </BtnTransparent>\n//             <Icon.ShoppingCart size=\"24\" color=\"white\" />\n//           </div>\n//         </NavMain>\n//       )}\n//     </MyContext.Consumer>\n//   );\n// }","map":{"version":3,"sources":["/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/collapsibles/Collapsible.js"],"names":["React","styled","MyContext","Link","StyledCollapsible","section","props","open","StyledItem","div","RenderItem","item","route","StyleLink","Collapsible","navbar","context","toggleMenu","user","heart","wishListProds","map","e","name","shoppingcart","Cart","price","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,iBAAiB,GAAGH,MAAM,CAACI,OAAQ;;;;IAIrC;AAAG;AAAuB;;;;;;;;;;;;;;;;IAgB1BC,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAe,2BAA2B;CApBvD;AAsBA,MAAMC,UAAU,GAAGP,MAAM,CAACQ,GAAI,EAA9B;;AAEA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,SACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAED,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,IAAb,CADF,CADF;AAKD,CAND;;AAQA,MAAME,SAAS,GAAGZ,MAAM,CAACE,IAAD,CAAO;;CAA/B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASW,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUR,EAAAA;AAAV,CAArB,EAAuC;AACpD,SACE,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,OAAO,IACN,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEA,OAAO,CAACC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAGKF,MAAM,CAACG,IAAR,GACG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEGH,MAAM,CAACI,KAAR,GAEA,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAK,IAAA,SAAS,EAAG,6BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,OAAO,CAACI,aAAR,CAAsBC,GAAtB,CAA0BC,CAAC,IAE1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,CAAC,CAACC,IAAP,CAFD,CADD,CAFA,CAFA,GAaCR,MAAM,CAACS,YAAR,GAEE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEF;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OAAO,CAACS,IAAR,CAAaJ,GAAb,CAAiBC,CAAC,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,CAAC,CAACC,IAAN,SAAeD,CAAC,CAACI,KAAjB,CADD,CADH,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWC,KAAK,CAACF,IAAN,CAAWJ,GAAX,CAAeC,CAAC,KAAK,EAAL,CAAhB,CAAX,MAJF,CAFE,CAFF,GAYA,IA9BN,CAFJ,CADF;AAuCD;AACD;AAAC;;;;AAGgB;AACjB,CA6Be;AA7Bd;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { MyContext } from \"../../context\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledCollapsible = styled.section`\n  padding: 20px;\n  position: relative;\n  background: white;\n  ${\"\" /* position: fixed; */}\n  position: absolute;\n  height: 100%;\n  top: 0;\n  right: 0;\n  width: 300px;\n  height: 100vh;\n  min-width: 400px;\n  bottom: 0;\n  box-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.2);\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  /* esto es la magia */\n  z-index: 200;\n  transform: translateX(100%);\n  transition: all 0.3s;\n  ${props => props.open && `transform: translateX(0);`};\n`;\nconst StyledItem = styled.div``;\n\nconst RenderItem = (item, route) => {\n  return (\n    <StyleLink to={item}>\n      <StyledItem>{item}</StyledItem>\n    </StyleLink>\n  );\n};\n\nconst StyleLink = styled(Link)`\n  color: red;\n`;\n\n// const Item = item => {\n//   const arr = [];\n//   for (let key in item) {\n//     if (Object.keys(item[key]).length !== 0) {\n//       for (let key2 in item[key]) {\n//         arr.push(RenderItem(key2));\n//         console.log(item[key]);\n//       }\n//     }\n//   }\n//   return <StyledItem>{arr}</StyledItem>;\n// };\n\nexport default function Collapsible({ navbar, open }) {\n  return (\n    <MyContext.Consumer>\n      {context => (\n        <StyledCollapsible>\n          <button onClick={context.toggleMenu}>X</button>\n          {\n            (navbar.user) \n            ? (<Link to=\"/profile\"></Link>) \n            : (navbar.heart) \n            ? (\n              <>\n              <h2>WishList</h2>\n              <div className = \"wishlist-elements-container\">\n              {context.wishListProds.map(e=>(\n\n                <h2>{e.name}</h2>\n\n              ))}\n              </div> \n              </>\n              ) \n            : (navbar.shoppingcart)\n            ? (\n                <>\n                <h2>Your Cart</h2>\n              <div className = \"cart-products\">\n                {context.Cart.map(e=>(\n                  <p>{e.name} : {e.price}</p>\n                ))}\n                <p>Total: {state.Cart.map(e => ({}))} </p>\n                </div>\n                </>\n              )\n            : null\n          }\n        </StyledCollapsible>\n      )}\n    </MyContext.Consumer>\n  );\n}\n{/* {if {}}\n          {items.map((item, idx) => (\n            <Item key={idx} {...item} />\n          ))} */}\n{/* {\n            (navbar.user) \n            ? (<Link to=\"/profile\"></Link>) \n            : (navbar.heart) \n            ? (\n              <>\n              <h2>WishList</h2>\n              <div className = \"wishlist-elements-container\">\n              {context.wishListProds.map(e=>(\n\n                <h2>{e.name}</h2>\n\n              ))}\n              </div> \n              </>\n              ) \n            : (navbar.shoppingcart)\n            ? (\n                <>\n                <h2>Your Cart</h2>\n              <div className = \"cart-products\">\n                {context.Cart.map(e=>(\n                  <p>{e.name} : {e.price}</p>\n                ))}\n                <p>Total: {state.Cart.map(e => ({}))} </p>\n                </div>\n                </>\n              )\n            : null\n          } */}\n// export default Collapsible;\n\n// export default function NavBar() {\n//   return (\n//     <MyContext.Consumer>\n//       {context => (\n//         <NavMain>\n//           <Collapsible\n//             items={[\n//               {\n//                 title: \"a\",\n//                 body: \"asdf\"\n//               }\n//             ]}\n//             open={context.open}\n//           />\n//           <h1 className=\"logo\">MoMe</h1>\n//           <div className=\"main-nav-icons\">\n//             <Icon.Heart size=\"24\" color=\"white\" />\n//             <BtnTransparent onClick={context.switchOpen}>\n//               <Icon.User size=\"24\" color=\"white\" />\n//             </BtnTransparent>\n\n//             <Icon.ShoppingCart size=\"24\" color=\"white\" />\n//           </div>\n//         </NavMain>\n//       )}\n//     </MyContext.Consumer>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}