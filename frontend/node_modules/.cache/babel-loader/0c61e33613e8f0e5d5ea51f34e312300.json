{"ast":null,"code":"var _jsxFileName = \"/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/collapsibles/Collapsible.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { MyContext } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { CloseBtn, SlideMenuProf } from \"./StylesCollapsable\";\nimport { colors, TemplateBtn } from \"../../styledComponents/StyledComps\";\nconst StyledCollapsible = styled.section`\n  padding: 20px;\n  position: relative;\n  background: white;\n  ${\"\"\n/* position: fixed; */\n}\n  position: absolute;\n  height: 100%;\n  top: 0;\n  right: 0;\n  width: 300px;\n  height: 100vh;\n  min-width: 400px;\n  bottom: 0;\n  box-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.2);\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  /* esto es la magia */\n  z-index: 200;\n  transform: translateX(100%);\n  transition: all 0.3s;\n  ${props => props.open && `transform: translateX(0);`};\n`;\n\nconst RenderItem = (item, route) => {\n  return React.createElement(StyleLink, {\n    to: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(StyledItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, item));\n};\n\nconst StyleLink = styled(Link)`\n  color: ${colors.darkBlack};\n  text-decoration: none;\n  padding: 20px;\n  font-size: 1.4rem;\n`;\n\nfunction Collapsible(props) {\n  return React.createElement(MyContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, context => React.createElement(StyledCollapsible, {\n    open: props.open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CloseBtn, {\n    onClick: context.toggleMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-times fa-md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), props.navbar.user ? React.createElement(SlideMenuProf, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(StyleLink, {\n    to: \"/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(StyleLink, {\n    to: \"/orders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"My Orders\"), React.createElement(StyleLink, {\n    to: \"/profile-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Adresses\"), React.createElement(TemplateBtn, {\n    onClick: context.handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Logout\")) : props.navbar.heart ? React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"WishList\"), React.createElement(\"div\", {\n    className: \"wishlist-elements-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, context.wishListProds.map(e => React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, e.name)))) : props.navbar.shoppingcart ? React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Your Cart\"), React.createElement(\"div\", {\n    className: \"cart-products\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, context.Cart.map(e => React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, e.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, e.size, \" : \", e.quantity), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"price: \", e.price))), React.createElement(\"button\", {\n    onClick: () => props.history.push(\"/order\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Submit Order\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Total: \", context.totalValueCart))) : null));\n}\n\nexport default withRouter(Collapsible);\n{\n  /* {if {}}\n          {items.map((item, idx) => (\n            <Item key={idx} {...item} />\n          ))} */\n}\n{}\n/* {\n          (navbar.user) \n          ? (<Link to=\"/profile\"></Link>) \n          : (navbar.heart) \n          ? (\n            <>\n            <h2>WishList</h2>\n            <div className = \"wishlist-elements-container\">\n            {context.wishListProds.map(e=>(\n               <h2>{e.name}</h2>\n             ))}\n            </div> \n            </>\n            ) \n          : (navbar.shoppingcart)\n          ? (\n              <>\n              <h2>Your Cart</h2>\n            <div className = \"cart-products\">\n              {context.Cart.map(e=>(\n                <p>{e.name} : {e.price}</p>\n              ))}\n              <p>Total: {state.Cart.map(e => ({}))} </p>\n              </div>\n              </>\n            )\n          : null\n        } */\n// export default Collapsible;\n// export default function NavBar() {\n//   return (\n//     <MyContext.Consumer>\n//       {context => (\n//         <NavMain>\n//           <Collapsible\n//             items={[\n//               {\n//                 title: \"a\",\n//                 body: \"asdf\"\n//               }\n//             ]}\n//             open={context.open}\n//           />\n//           <h1 className=\"logo\">MoMe</h1>\n//           <div className=\"main-nav-icons\">\n//             <Icon.Heart size=\"24\" color=\"white\" />\n//             <BtnTransparent onClick={context.switchOpen}>\n//               <Icon.User size=\"24\" color=\"white\" />\n//             </BtnTransparent>\n//             <Icon.ShoppingCart size=\"24\" color=\"white\" />\n//           </div>\n//         </NavMain>\n//       )}\n//     </MyContext.Consumer>\n//   );\n// }","map":{"version":3,"sources":["/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/collapsibles/Collapsible.js"],"names":["React","styled","MyContext","Link","withRouter","CloseBtn","SlideMenuProf","colors","TemplateBtn","StyledCollapsible","section","props","open","RenderItem","item","route","StyleLink","darkBlack","Collapsible","context","toggleMenu","navbar","user","handleLogout","heart","wishListProds","map","e","name","shoppingcart","Cart","size","quantity","price","history","push","totalValueCart"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { MyContext } from \"../../context\"\nimport { Link } from \"react-router-dom\"\nimport { withRouter } from \"react-router-dom\"\nimport { CloseBtn, SlideMenuProf } from \"./StylesCollapsable\"\nimport { colors, TemplateBtn, } from \"../../styledComponents/StyledComps\"\n\nconst StyledCollapsible = styled.section`\n  padding: 20px;\n  position: relative;\n  background: white;\n  ${\"\" /* position: fixed; */}\n  position: absolute;\n  height: 100%;\n  top: 0;\n  right: 0;\n  width: 300px;\n  height: 100vh;\n  min-width: 400px;\n  bottom: 0;\n  box-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.2);\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  /* esto es la magia */\n  z-index: 200;\n  transform: translateX(100%);\n  transition: all 0.3s;\n  ${props => props.open && `transform: translateX(0);`};\n`\n\nconst RenderItem = (item, route) => {\n  return (\n    <StyleLink to={item}>\n      <StyledItem>{item}</StyledItem>\n    </StyleLink>\n  )\n}\n\nconst StyleLink = styled(Link)`\n  color: ${colors.darkBlack};\n  text-decoration: none;\n  padding: 20px;\n  font-size: 1.4rem;\n`\n\nfunction Collapsible(props) {\n  return (\n    <MyContext.Consumer>\n      {context => (\n        <StyledCollapsible open={props.open}>\n          <CloseBtn onClick={context.toggleMenu}>\n            <i class=\"fas fa-times fa-md\"></i>\n          </CloseBtn>\n          {props.navbar.user ? (\n            <SlideMenuProf>\n              <StyleLink to=\"/profile\">Profile</StyleLink>\n              <StyleLink to=\"/orders\">My Orders</StyleLink>\n              <StyleLink to=\"/profile-address\">Adresses</StyleLink>\n              <TemplateBtn onClick={context.handleLogout}>Logout</TemplateBtn>\n            </SlideMenuProf>\n          ) : props.navbar.heart ? (\n            <>\n              <h2>WishList</h2>\n              <div className=\"wishlist-elements-container\">\n                {context.wishListProds.map(e => (\n                  <h2>{e.name}</h2>\n                ))}\n              </div>\n            </>\n          ) : props.navbar.shoppingcart ? (\n            <>\n              <h2>Your Cart</h2>\n              <div className=\"cart-products\">\n                {context.Cart.map(e => (\n                  <>\n                    <p>{e.name}</p>\n                    <p>\n                      {e.size} : {e.quantity}\n                    </p>\n                    <p>price: {e.price}</p>\n                  </>\n                ))}\n                <button onClick={() => props.history.push(\"/order\")}>\n                  Submit Order\n                </button>\n                <p>Total: {context.totalValueCart}</p>\n              </div>\n            </>\n          ) : null}\n        </StyledCollapsible>\n      )}\n    </MyContext.Consumer>\n  )\n}\nexport default withRouter(Collapsible)\n{\n  /* {if {}}\n          {items.map((item, idx) => (\n            <Item key={idx} {...item} />\n          ))} */\n}\n{\n  /* {\n            (navbar.user) \n            ? (<Link to=\"/profile\"></Link>) \n            : (navbar.heart) \n            ? (\n              <>\n              <h2>WishList</h2>\n              <div className = \"wishlist-elements-container\">\n              {context.wishListProds.map(e=>(\n\n                <h2>{e.name}</h2>\n\n              ))}\n              </div> \n              </>\n              ) \n            : (navbar.shoppingcart)\n            ? (\n                <>\n                <h2>Your Cart</h2>\n              <div className = \"cart-products\">\n                {context.Cart.map(e=>(\n                  <p>{e.name} : {e.price}</p>\n                ))}\n                <p>Total: {state.Cart.map(e => ({}))} </p>\n                </div>\n                </>\n              )\n            : null\n          } */\n}\n// export default Collapsible;\n\n// export default function NavBar() {\n//   return (\n//     <MyContext.Consumer>\n//       {context => (\n//         <NavMain>\n//           <Collapsible\n//             items={[\n//               {\n//                 title: \"a\",\n//                 body: \"asdf\"\n//               }\n//             ]}\n//             open={context.open}\n//           />\n//           <h1 className=\"logo\">MoMe</h1>\n//           <div className=\"main-nav-icons\">\n//             <Icon.Heart size=\"24\" color=\"white\" />\n//             <BtnTransparent onClick={context.switchOpen}>\n//               <Icon.User size=\"24\" color=\"white\" />\n//             </BtnTransparent>\n\n//             <Icon.ShoppingCart size=\"24\" color=\"white\" />\n//           </div>\n//         </NavMain>\n//       )}\n//     </MyContext.Consumer>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}