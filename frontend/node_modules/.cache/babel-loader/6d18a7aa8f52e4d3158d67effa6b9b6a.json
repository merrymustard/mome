{"ast":null,"code":"import _objectWithoutProperties from \"/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/feed/Checkbox.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { MyContext } from '../../context';\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`; // Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\n\nconst HiddenCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => props.checked_men.checked ? props.checked_men.color : props.checked_men.color2}\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink;\n  }\n\n  ${Icon} {\n    visibility: ${props => props.checked ? 'visible' : 'hidden'}\n  }\n`;\n\nconst Checkbox = (_ref) => {\n  let className = _ref.className,\n      checked = _ref.checked,\n      props = _objectWithoutProperties(_ref, [\"className\", \"checked\"]);\n\n  return React.createElement(CheckboxContainer, {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(HiddenCheckbox, Object.assign({\n    checked: context.checkedBoxes.checked_men\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(StyledCheckbox, {\n    checked: checked_men,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    viewBox: \"0 0 24 24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"polyline\", {\n    points: \"20 6 9 17 4 12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/feed/Checkbox.js"],"names":["React","styled","MyContext","CheckboxContainer","div","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","props","checked_men","checked","color","color2","Checkbox","className","context","checkedBoxes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,MAAMC,iBAAiB,GAAGF,MAAM,CAACG,GAAI;;;CAArC;AAKA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;;;;CAAxB,C,CAKA;AACA;;AACA,MAAMC,cAAc,GAAGN,MAAM,CAACO,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAyC;;;;;;;;;;;CAAhE;AAaA,MAAMC,cAAc,GAAGV,MAAM,CAACG,GAAI;;;;gBAIlBQ,KAAK,IAAKA,KAAK,CAACC,WAAN,CAAkBC,OAAlB,GAA4BF,KAAK,CAACC,WAAN,CAAkBE,KAA9C,GAAsDH,KAAK,CAACC,WAAN,CAAkBG,MAAS;;;;IAIvGT,cAAe;;;;IAIfF,IAAK;kBACSO,KAAK,IAAKA,KAAK,CAACE,OAAN,GAAgB,SAAhB,GAA4B,QAAU;;CAblE;;AAiBA,MAAMG,QAAQ,GAAG;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcJ,OAAd,QAAcA,OAAd;AAAA,MAA0BF,KAA1B;;AAAA,SACf,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEM,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEC,OAAO,CAACC,YAAR,CAAqBP;AAA9C,KAA+DD,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,MAAM,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CADe;AAAA,CAAjB;;AAWA,eAAeI,QAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { MyContext } from '../../context'\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`\n// Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => (props.checked_men.checked ? props.checked_men.color : props.checked_men.color2 )}\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink;\n  }\n\n  ${Icon} {\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')}\n  }\n`\n\nconst Checkbox = ({ className, checked, ...props }) => (\n  <CheckboxContainer className={className}>\n    <HiddenCheckbox checked={context.checkedBoxes.checked_men} {...props} />\n    <StyledCheckbox checked={checked_men}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n)\n\nexport default Checkbox\n"]},"metadata":{},"sourceType":"module"}