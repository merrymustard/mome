{"ast":null,"code":"import * as React from \"react\";\nimport { disablePageScroll, enablePageScroll } from \"scroll-lock\";\n\nfunction useScrollLock(enabled, ref) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n\n  var disabledRef = React.useRef(false); // scroll-lock uses an internal queue. we need to ensure that we only enable\n  // scrolling here if we have already disabled scrolling.\n\n  React.useEffect(function () {\n    if (enabled && !disabledRef.current) {\n      disablePageScroll(ref ? ref.current : undefined);\n      disabledRef.current = true;\n    }\n\n    return function () {\n      if (disabledRef.current) {\n        enablePageScroll(ref ? ref.current : undefined);\n        disabledRef.current = false;\n      }\n    };\n  }, [enabled, ref, disabledRef]);\n}\n\nexport default useScrollLock;","map":null,"metadata":{},"sourceType":"module"}