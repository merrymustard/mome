{"ast":null,"code":"var _jsxFileName = \"/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/NavBar.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Collapsible from \"../components/collapsibles/Collapsible\";\nimport { MyContext } from \"../context\";\nimport { NavMain, BtnTransparent } from \"../styledComponents/StyledComps\";\nimport * as Icon from \"react-feather\";\nimport styled from \"styled-components\";\nconst CatButton = styled.button`\n  color: white;\n  background-color: transparent;\n  border: none;\n  font-size: 1em;\n  padding: 10px 10px;\n  transition: all .2s ease-in-out;\n  &:hover {\n    background-color: ${colors.purple01};\n\t\tcolor: ${colors.darkBlack}\n\t\ttransform: scale(1.05);   \n    }\n`;\nconst StyleLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  transition: all 0.2s ease-in-out;\n  h1:hover {\n    color: #f07b7b;\n    transform: scale(1.05);\n  }\n`;\n\nclass NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      navbar: {\n        heart: false,\n        user: false,\n        shoppingcart: false\n      }\n    };\n\n    this.handleClick = (e, icon) => {\n      if (icon === \"heart\") {\n        this.setState({\n          navbar: {\n            heart: true,\n            user: false,\n            shoppingcart: false\n          }\n        });\n      } else if (icon === \"user\") {\n        this.setState({\n          navbar: {\n            heart: false,\n            user: true,\n            shoppingcart: false\n          }\n        });\n      } else if (icon === \"shoppingcart\") {\n        this.setState({\n          navbar: {\n            heart: false,\n            user: false,\n            shoppingcart: true\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(MyContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, context => React.createElement(NavMain, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Collapsible, {\n      navbar: this.state.navbar,\n      open: context.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-nav-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(StyleLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"logo redUnder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"MoMe\")), React.createElement(StyleLink, {\n      to: \"/man\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CatButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Hombres\")), React.createElement(StyleLink, {\n      to: \"/woman\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(CatButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Mujeres\")), React.createElement(StyleLink, {\n      to: \"/feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CatButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Toda\"))), context.loggedUser ? React.createElement(\"div\", {\n      className: \"main-nav-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(BtnTransparent, {\n      iicon: \"1\",\n      onClick: e => {\n        this.handleClick(e, \"heart\");\n        context.toggleMenu(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Icon.Heart, {\n      icon: \"heart\",\n      size: \"24\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(BtnTransparent, {\n      onClick: e => {\n        this.handleClick(e, \"user\");\n        context.toggleMenu(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Icon.User, {\n      icon: \"user\",\n      size: \"24\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(BtnTransparent, {\n      onClick: e => {\n        this.handleClick(e, \"shoppingcart\");\n        context.toggleMenu(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Icon.ShoppingCart, {\n      icon: \"shoppingcart\",\n      size: \"24\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))) : React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Icon.User, {\n      icon: \"user\",\n      size: \"24\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/NavBar.js"],"names":["React","Component","Link","Collapsible","MyContext","NavMain","BtnTransparent","Icon","styled","CatButton","button","colors","purple01","darkBlack","StyleLink","NavBar","state","navbar","heart","user","shoppingcart","handleClick","e","icon","setState","render","context","open","loggedUser","toggleMenu"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Collapsible from \"../components/collapsibles/Collapsible\"\nimport { MyContext } from \"../context\"\nimport {\n  NavMain,\n  BtnTransparent,\n} from \"../styledComponents/StyledComps\"\nimport * as Icon from \"react-feather\"\nimport styled from \"styled-components\"\n\n\n const CatButton = styled.button`\n  color: white;\n  background-color: transparent;\n  border: none;\n  font-size: 1em;\n  padding: 10px 10px;\n  transition: all .2s ease-in-out;\n  &:hover {\n    background-color: ${colors.purple01};\n\t\tcolor: ${colors.darkBlack}\n\t\ttransform: scale(1.05);   \n    }\n`\n\n\nconst StyleLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  transition: all 0.2s ease-in-out;\n  h1:hover {\n    color: #f07b7b;\n    transform: scale(1.05);\n  }\n`\n\nclass NavBar extends Component {\n  state = {\n    navbar: {\n      heart: false,\n      user: false,\n      shoppingcart: false\n    }\n  }\n\n  handleClick = (e, icon) => {\n    if (icon === \"heart\") {\n      this.setState({\n        navbar: {\n          heart: true,\n          user: false,\n          shoppingcart: false\n        }\n      })\n    } else if (icon === \"user\") {\n      this.setState({\n        navbar: {\n          heart: false,\n          user: true,\n          shoppingcart: false\n        }\n      })\n    } else if (icon === \"shoppingcart\") {\n      this.setState({\n        navbar: {\n          heart: false,\n          user: false,\n          shoppingcart: true\n        }\n      })\n    }\n  }\n  render() {\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <NavMain>\n            <Collapsible navbar={this.state.navbar} open={context.open} />\n            <div className=\"main-nav-icons\">\n              <StyleLink to=\"/\">\n                <h1 className=\"logo redUnder\">MoMe</h1>\n              </StyleLink>\n              <StyleLink to=\"/man\">\n                <CatButton>Hombres</CatButton>\n              </StyleLink>\n              <StyleLink to=\"/woman\">\n                <CatButton>Mujeres</CatButton>\n              </StyleLink>\n              <StyleLink to=\"/feed\">\n                <CatButton>Toda</CatButton>\n              </StyleLink>\n            </div>\n\n            {context.loggedUser ? (\n              <div className=\"main-nav-icons\">\n                <BtnTransparent\n                  iicon=\"1\"\n                  onClick={e => {\n                    this.handleClick(e, \"heart\")\n                    context.toggleMenu(e)\n                  }}\n                >\n                  <Icon.Heart icon={\"heart\"} size=\"24\" color=\"white\" />\n                </BtnTransparent>\n\n                <BtnTransparent\n                  onClick={e => {\n                    this.handleClick(e, \"user\")\n                    context.toggleMenu(e)\n                  }}\n                >\n                  <Icon.User icon={\"user\"} size=\"24\" color=\"white\" />\n                </BtnTransparent>\n\n                <BtnTransparent\n                  onClick={e => {\n                    this.handleClick(e, \"shoppingcart\")\n                    context.toggleMenu(e)\n                  }}\n                >\n                  <Icon.ShoppingCart\n                    icon={\"shoppingcart\"}\n                    size=\"24\"\n                    color=\"white\"\n                  />\n                </BtnTransparent>\n              </div>\n            ) : (\n              <Link to=\"/login\">\n                <Icon.User icon={\"user\"} size=\"24\" color=\"white\" />\n              </Link>\n            )}\n          </NavMain>\n        )}\n      </MyContext.Consumer>\n    )\n  }\n}\n\nexport default NavBar\n"]},"metadata":{},"sourceType":"module"}