{"ast":null,"code":"import axios from \"axios\";\nlet baseURL;\nprocess.env.NODE_ENV === \"production\" ? baseURL = \"here should be your production endpoint\" : baseURL = \" https://guarded-plateau-32903.herokuapp.com\"; // : (baseURL = \"http://localhost:3000\")\n\nconst service = axios.create({\n  withCredentials: true,\n  baseURL\n});\nconst MY_SERVICE = {\n  signup: async user => {\n    return await service.post(\"/signup\", user);\n  },\n  login: async user => {\n    return await service.post(\"/login\", user);\n  },\n  logout: async () => {\n    return await service.post(\"/logout\");\n  },\n  getUser: async () => {\n    return await service.get(\"/loggedin\");\n  },\n  edit: async () => {\n    return await service.post(\"/edit\");\n  },\n  addproduct: async product => {\n    return await service.post(\"/addproduct\", product);\n  },\n  deleteProductFromWishlist: async productId => {\n    return await service.post(\"/delete-product-from-wishlist\", productId);\n  },\n  deleteProduct: async productId => {\n    return await service.post(\"/delete-product\", productId);\n  },\n  getProducts: async query => {\n    return await service.get(\"/products\", query);\n  },\n  productDetail: async productId => {\n    return await service.post(\"/product-detail\", {\n      productId: productId\n    });\n  },\n  createOrder: async order => {\n    return await service.post(\"/new-order\", order);\n  },\n  addProductToWishlist: async article => {\n    return await service.post(\"/add-product-to-wishlist\", {\n      article\n    });\n  },\n  upload: async image => {\n    return await service.post(\"/upload\", image);\n  }\n};\nexport default MY_SERVICE;","map":{"version":3,"sources":["/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/services/index.js"],"names":["axios","baseURL","process","env","NODE_ENV","service","create","withCredentials","MY_SERVICE","signup","user","post","login","logout","getUser","get","edit","addproduct","product","deleteProductFromWishlist","productId","deleteProduct","getProducts","query","productDetail","createOrder","order","addProductToWishlist","article","upload","image"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,OAAJ;AAEAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACKH,OAAO,GAAG,yCADf,GAEKA,OAAO,GAAG,8CAFf,C,CAIE;;AAEF,MAAMI,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBN,EAAAA;AAAzB,CAAb,CAAhB;AAEA,MAAMO,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE,MAAMC,IAAN,IAAc;AACpB,WAAO,MAAML,OAAO,CAACM,IAAR,CAAa,SAAb,EAAwBD,IAAxB,CAAb;AACD,GAHgB;AAIjBE,EAAAA,KAAK,EAAE,MAAMF,IAAN,IAAc;AACnB,WAAO,MAAML,OAAO,CAACM,IAAR,CAAa,QAAb,EAAuBD,IAAvB,CAAb;AACD,GANgB;AAOjBG,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,MAAMR,OAAO,CAACM,IAAR,CAAa,SAAb,CAAb;AACD,GATgB;AAUjBG,EAAAA,OAAO,EAAE,YAAY;AACnB,WAAO,MAAMT,OAAO,CAACU,GAAR,CAAY,WAAZ,CAAb;AACD,GAZgB;AAajBC,EAAAA,IAAI,EAAE,YAAY;AAChB,WAAO,MAAMX,OAAO,CAACM,IAAR,CAAa,OAAb,CAAb;AACD,GAfgB;AAgBjBM,EAAAA,UAAU,EAAE,MAAMC,OAAN,IAAiB;AAC3B,WAAO,MAAMb,OAAO,CAACM,IAAR,CAAa,aAAb,EAA4BO,OAA5B,CAAb;AACD,GAlBgB;AAmBjBC,EAAAA,yBAAyB,EAAE,MAAMC,SAAN,IAAmB;AAC5C,WAAO,MAAMf,OAAO,CAACM,IAAR,CAAa,+BAAb,EAA8CS,SAA9C,CAAb;AACD,GArBgB;AAsBjBC,EAAAA,aAAa,EAAE,MAAMD,SAAN,IAAmB;AAChC,WAAO,MAAMf,OAAO,CAACM,IAAR,CAAa,iBAAb,EAAgCS,SAAhC,CAAb;AACD,GAxBgB;AAyBjBE,EAAAA,WAAW,EAAE,MAAMC,KAAN,IAAe;AAC1B,WAAO,MAAMlB,OAAO,CAACU,GAAR,CAAY,WAAZ,EAAyBQ,KAAzB,CAAb;AACD,GA3BgB;AA4BjBC,EAAAA,aAAa,EAAE,MAAMJ,SAAN,IAAmB;AAChC,WAAO,MAAMf,OAAO,CAACM,IAAR,CAAa,iBAAb,EAAgC;AAAES,MAAAA,SAAS,EAAEA;AAAb,KAAhC,CAAb;AACD,GA9BgB;AA+BjBK,EAAAA,WAAW,EAAE,MAAMC,KAAN,IAAe;AAC1B,WAAO,MAAMrB,OAAO,CAACM,IAAR,CAAa,YAAb,EAA2Be,KAA3B,CAAb;AACD,GAjCgB;AAkCjBC,EAAAA,oBAAoB,EAAE,MAAMC,OAAN,IAAiB;AACrC,WAAO,MAAMvB,OAAO,CAACM,IAAR,CAAa,0BAAb,EAAyC;AAAEiB,MAAAA;AAAF,KAAzC,CAAb;AACD,GApCgB;AAqCjBC,EAAAA,MAAM,EAAE,MAAMC,KAAN,IAAe;AACrB,WAAO,MAAMzB,OAAO,CAACM,IAAR,CAAa,SAAb,EAAwBmB,KAAxB,CAAb;AACD;AAvCgB,CAAnB;AA0CA,eAAetB,UAAf","sourcesContent":["import axios from \"axios\"\nlet baseURL\n\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"here should be your production endpoint\")\n  : (baseURL = \" https://guarded-plateau-32903.herokuapp.com\")\n\n  // : (baseURL = \"http://localhost:3000\")\n\nconst service = axios.create({ withCredentials: true, baseURL })\n\nconst MY_SERVICE = {\n  signup: async user => {\n    return await service.post(\"/signup\", user)\n  },\n  login: async user => {\n    return await service.post(\"/login\", user)\n  },\n  logout: async () => {\n    return await service.post(\"/logout\")\n  },\n  getUser: async () => {\n    return await service.get(\"/loggedin\")\n  },\n  edit: async () => {\n    return await service.post(\"/edit\")\n  },\n  addproduct: async product => {\n    return await service.post(\"/addproduct\", product)\n  },\n  deleteProductFromWishlist: async productId => {\n    return await service.post(\"/delete-product-from-wishlist\", productId)\n  },\n  deleteProduct: async productId => {\n    return await service.post(\"/delete-product\", productId)\n  },\n  getProducts: async query => {\n    return await service.get(\"/products\", query)\n  },\n  productDetail: async productId => {\n    return await service.post(\"/product-detail\", { productId: productId })\n  },\n  createOrder: async order => {\n    return await service.post(\"/new-order\", order)\n  },\n  addProductToWishlist: async article => {\n    return await service.post(\"/add-product-to-wishlist\", { article })\n  },\n  upload: async image => {\n    return await service.post(\"/upload\", image)\n  }\n}\n\nexport default MY_SERVICE\n"]},"metadata":{},"sourceType":"module"}