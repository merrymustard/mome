{"ast":null,"code":"var _jsxFileName = \"/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/collapsibles/Collapsible.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { MyContext } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { CloseBtn, SlideMenuProf, StyledCollapsible, SlideCart } from \"./StylesCollapsable\";\nimport { colors, TemplateBtn } from \"../../styledComponents/StyledComps\";\nconst StyleLink = styled(Link)`\n  color: ${colors.darkBlack};\n  text-decoration: none;\n  padding: 20px;\n  font-size: 1.4rem;\n`;\n\nfunction Collapsible(props) {\n  return React.createElement(MyContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, context => React.createElement(StyledCollapsible, {\n    open: props.open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(CloseBtn, {\n    onClick: context.toggleMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-times fa-md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), props.navbar.user ? React.createElement(SlideMenuProf, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(StyleLink, {\n    to: \"/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(StyleLink, {\n    to: \"/orders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"My Orders\"), React.createElement(StyleLink, {\n    to: \"/profile-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Adresses\"), React.createElement(TemplateBtn, {\n    onClick: context.handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Logout\")) : props.navbar.heart ? React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"WishList\"), React.createElement(\"div\", {\n    className: \"wishlist-elements-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, context.wishListProds.map(e => React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, e.name)))) : props.navbar.shoppingcart ? React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Your Cart\"), React.createElement(\"div\", {\n    className: \"cart-products\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(SlideCart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, context.Cart.map(e => React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, e.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, e.size, \" : \", e.quantity), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"price: \", e.price))), React.createElement(\"button\", {\n    onClick: () => props.history.push(\"/order\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Submit Order\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Total: \", context.totalValueCart)))) : null));\n}\n\nexport default withRouter(Collapsible);\n{\n  /* {if {}}\n          {items.map((item, idx) => (\n            <Item key={idx} {...item} />\n          ))} */\n}\n{}\n/* {\n          (navbar.user) \n          ? (<Link to=\"/profile\"></Link>) \n          : (navbar.heart) \n          ? (\n            <>\n            <h2>WishList</h2>\n            <div className = \"wishlist-elements-container\">\n            {context.wishListProds.map(e=>(\n               <h2>{e.name}</h2>\n             ))}\n            </div> \n            </>\n            ) \n          : (navbar.shoppingcart)\n          ? (\n              <>\n              <h2>Your Cart</h2>\n            <div className = \"cart-products\">\n              {context.Cart.map(e=>(\n                <p>{e.name} : {e.price}</p>\n              ))}\n              <p>Total: {state.Cart.map(e => ({}))} </p>\n              </div>\n              </>\n            )\n          : null\n        } */\n// export default Collapsible;\n// export default function NavBar() {\n//   return (\n//     <MyContext.Consumer>\n//       {context => (\n//         <NavMain>\n//           <Collapsible\n//             items={[\n//               {\n//                 title: \"a\",\n//                 body: \"asdf\"\n//               }\n//             ]}\n//             open={context.open}\n//           />\n//           <h1 className=\"logo\">MoMe</h1>\n//           <div className=\"main-nav-icons\">\n//             <Icon.Heart size=\"24\" color=\"white\" />\n//             <BtnTransparent onClick={context.switchOpen}>\n//               <Icon.User size=\"24\" color=\"white\" />\n//             </BtnTransparent>\n//             <Icon.ShoppingCart size=\"24\" color=\"white\" />\n//           </div>\n//         </NavMain>\n//       )}\n//     </MyContext.Consumer>\n//   );\n// }","map":{"version":3,"sources":["/Users/mariasantosmoises/Documents/Ironhack/mome/frontend/src/components/collapsibles/Collapsible.js"],"names":["React","styled","MyContext","Link","withRouter","CloseBtn","SlideMenuProf","StyledCollapsible","SlideCart","colors","TemplateBtn","StyleLink","darkBlack","Collapsible","props","context","open","toggleMenu","navbar","user","handleLogout","heart","wishListProds","map","e","name","shoppingcart","Cart","size","quantity","price","history","push","totalValueCart"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { MyContext } from \"../../context\"\nimport { Link } from \"react-router-dom\"\nimport { withRouter } from \"react-router-dom\"\nimport { CloseBtn, SlideMenuProf, StyledCollapsible, SlideCart } from \"./StylesCollapsable\"\nimport { colors, TemplateBtn } from \"../../styledComponents/StyledComps\"\n\nconst StyleLink = styled(Link)`\n  color: ${colors.darkBlack};\n  text-decoration: none;\n  padding: 20px;\n  font-size: 1.4rem;\n`\n\nfunction Collapsible(props) {\n  return (\n    <MyContext.Consumer>\n      {context => (\n        <StyledCollapsible open={props.open}>\n          <CloseBtn onClick={context.toggleMenu}>\n            <i class=\"fas fa-times fa-md\"></i>\n          </CloseBtn>\n          {props.navbar.user ? (\n            <SlideMenuProf>\n              <StyleLink to=\"/profile\">Profile</StyleLink>\n              <StyleLink to=\"/orders\">My Orders</StyleLink>\n              <StyleLink to=\"/profile-address\">Adresses</StyleLink>\n              <TemplateBtn onClick={context.handleLogout}>Logout</TemplateBtn>\n            </SlideMenuProf>\n          ) : props.navbar.heart ? (\n            <>\n              <h2>WishList</h2>\n              <div className=\"wishlist-elements-container\">\n                {context.wishListProds.map(e => (\n                  <h2>{e.name}</h2>\n                ))}\n              </div>\n            </>\n          ) : props.navbar.shoppingcart ? (\n            <>\n              <h2>Your Cart</h2>\n              <div className=\"cart-products\">\n                <SlideCart>\n                  {context.Cart.map(e => (\n                    <>\n                      <p>{e.name}</p>\n                      <p>\n                        {e.size} : {e.quantity}\n                      </p>\n                      <p>price: {e.price}</p>\n                    </>\n                  ))}\n                  <button onClick={() => props.history.push(\"/order\")}>\n                    Submit Order\n                  </button>\n                  <p>Total: {context.totalValueCart}</p>\n                </SlideCart>\n              </div>\n            </>\n          ) : null}\n        </StyledCollapsible>\n      )}\n    </MyContext.Consumer>\n  )\n}\nexport default withRouter(Collapsible)\n{\n  /* {if {}}\n          {items.map((item, idx) => (\n            <Item key={idx} {...item} />\n          ))} */\n}\n{\n  /* {\n            (navbar.user) \n            ? (<Link to=\"/profile\"></Link>) \n            : (navbar.heart) \n            ? (\n              <>\n              <h2>WishList</h2>\n              <div className = \"wishlist-elements-container\">\n              {context.wishListProds.map(e=>(\n\n                <h2>{e.name}</h2>\n\n              ))}\n              </div> \n              </>\n              ) \n            : (navbar.shoppingcart)\n            ? (\n                <>\n                <h2>Your Cart</h2>\n              <div className = \"cart-products\">\n                {context.Cart.map(e=>(\n                  <p>{e.name} : {e.price}</p>\n                ))}\n                <p>Total: {state.Cart.map(e => ({}))} </p>\n                </div>\n                </>\n              )\n            : null\n          } */\n}\n// export default Collapsible;\n\n// export default function NavBar() {\n//   return (\n//     <MyContext.Consumer>\n//       {context => (\n//         <NavMain>\n//           <Collapsible\n//             items={[\n//               {\n//                 title: \"a\",\n//                 body: \"asdf\"\n//               }\n//             ]}\n//             open={context.open}\n//           />\n//           <h1 className=\"logo\">MoMe</h1>\n//           <div className=\"main-nav-icons\">\n//             <Icon.Heart size=\"24\" color=\"white\" />\n//             <BtnTransparent onClick={context.switchOpen}>\n//               <Icon.User size=\"24\" color=\"white\" />\n//             </BtnTransparent>\n\n//             <Icon.ShoppingCart size=\"24\" color=\"white\" />\n//           </div>\n//         </NavMain>\n//       )}\n//     </MyContext.Consumer>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}