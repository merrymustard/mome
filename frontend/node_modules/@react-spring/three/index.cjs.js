'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var reactThreeFiber = require('react-three-fiber');
var core = require('@react-spring/core/index.cjs.js');
var stringInterpolation = require('@react-spring/shared/stringInterpolation');
var colorNames = _interopDefault(require('@react-spring/shared/colors'));
var THREE = require('three');
var animated$1 = require('@react-spring/animated/index.cjs.js');

var elements = Object.keys(THREE).filter(function (key) {
  return /^[A-Z]/.test(key);
}); // Extend animated with all the available THREE elements

var animated = animated$1.extendAnimated(animated$1.withAnimated, [].concat(elements, ['primitive']), true);

if (reactThreeFiber.addEffect) reactThreeFiber.addEffect(core.update);
core.Globals.assign({
  defaultElement: 'group',
  frameLoop: reactThreeFiber.addEffect && new core.FrameLoop({
    requestFrame: reactThreeFiber.invalidate
  }),
  applyAnimatedValues: reactThreeFiber.applyProps,
  createStringInterpolator: stringInterpolation.createStringInterpolator,
  colorNames: colorNames
});

Object.keys(core).forEach(function (k) {
  if (k !== 'default') Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () {
      return core[k];
    }
  });
});
exports.a = animated;
exports.animated = animated;
//# sourceMappingURL=index.cjs.js.map
