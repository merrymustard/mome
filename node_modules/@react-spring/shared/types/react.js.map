{"version":3,"file":"react.js","sourceRoot":"","sources":["../../src/types/react.ts"],"names":[],"mappings":"","sourcesContent":["// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/34237\nexport type ElementType<P = any> =\n  | React.ElementType<P>\n  | LeafFunctionComponent<P>\n\n// Function component without children\ntype LeafFunctionComponent<P> = {\n  (props: P): React.ReactElement | null\n  displayName?: string\n}\n\nexport type ComponentPropsWithRef<\n  T extends ElementType\n> = T extends React.ComponentClass<infer P>\n  ? React.PropsWithoutRef<P> & React.RefAttributes<InstanceType<T>>\n  : React.PropsWithRef<React.ComponentProps<T>>\n"]}