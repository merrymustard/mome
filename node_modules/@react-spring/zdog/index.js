import { addEffect, Anchor, invalidate, applyProps } from 'react-zdog';
import { update, Globals, FrameLoop } from '@react-spring/core';
export * from '@react-spring/core';
import { createStringInterpolator } from '@react-spring/shared/stringInterpolation';
import colorNames from '@react-spring/shared/colors';
import { extendAnimated, withAnimated } from '@react-spring/animated';

const elements = ['Anchor', 'Shape', 'Group', 'Rect', 'RoundedRect', 'Ellipse', 'Polygon', 'Hemisphere', 'Cylinder', 'Cone', 'Box']; // Extend animated with all the available Zdog elements

const animated = extendAnimated(withAnimated, elements);

if (addEffect) addEffect(update);
Globals.assign({
  defaultElement: Anchor,
  frameLoop: addEffect && new FrameLoop({
    requestFrame: invalidate
  }),
  applyAnimatedValues: applyProps,
  createStringInterpolator,
  colorNames
});

export { animated as a, animated };
//# sourceMappingURL=index.js.map
